{"version":3,"sources":["hooks/use-http.js","components/SearchButton/SearchIcon.js","components/SearchButton/SearchButton.js","components/NavBar/NavBar.js","components/MovieDetail/MovieDetail.js","components/SearchForm/SearchForm.js","components/ResultList/ResultList.js","pages/search/Search.jsx"],"names":["useHttp","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","requestConfig","applyData","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","SearchIcon","className","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","SearchButton","props","onClick","NavBar","headerColorClasses","yScroll","setYScroll","window","onscroll","scrollY","location","replace","console","log","MovieDetail","sendfetch","movieTrailer","setMovieTrailer","id","useEffect","loadedTrailer","results","content","src","picture","alt","length","opts","height","width","playerVars","autoplay","trailerFilter","filter","movie","site","type","trailer","find","videoId","key","onClose","title","releaseDate","vote","overview","SearchForm","searchKey","setSearchKey","onSubmit","e","preventDefault","onSearch","placeholder","onChange","target","value","ResultList","movies","setMovies","movieDetailIsShown","setMovieDetailIsShown","movieDetailId","setMovieDetailId","showMovieDetailHandler","Number","movieDeTail","query","loadedMovie","map","poster_path","name","first_air_date","vote_average","backdrop_path","Search"],"mappings":"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","file":"static/js/4.687f0385.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  //Gửi request lên server\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3${requestConfig.url}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {},\r\n          body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\nexport default useHttp;\r\n","import React from \"react\";\r\nconst SearchIcon = () => {\r\n  return (\r\n    <svg\r\n      className=\"svg-inline--fa fa-search fa-w-16\"\r\n      fill=\"#ccc\"\r\n      aria-hidden=\"true\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"search\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n    </svg>\r\n  );\r\n};\r\nexport default SearchIcon;\r\n","import SearchIcon from \"./SearchIcon\";\r\nimport \"./SearchButton.css\";\r\nimport React from \"react\";\r\nconst SearchButton = (props) => {\r\n  return (\r\n    <button className=\"button\" onClick={props.onClick}>\r\n      <span className=\"icon\">\r\n        <SearchIcon />\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\nexport default SearchButton;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nimport SearchButton from \"../SearchButton/SearchButton\";\r\nconst NavBar = () => {\r\n  const [yScroll, setYScroll] = useState(null);\r\n\r\n  //Đổi màu cho thanh navbar khi user cuôn trang hơn 100px\r\n  const scrollHandler = () => {\r\n    // Cập nhập giá trị scrollY vào state;\r\n    setYScroll(window.scrollY);\r\n  };\r\n  // Bắt sự kiện scroll của window\r\n  window.onscroll = scrollHandler;\r\n\r\n  let headerColorClasses;\r\n  // Khi scroll dưới 100px thì navbar màu đen, ngược lại thì không màu\r\n  if (yScroll < 100) {\r\n    headerColorClasses = \"header unscroll\";\r\n  } else {\r\n    headerColorClasses = \"header scroll\";\r\n  }\r\n\r\n  // Dẫn link đến trang Search\r\n  const gotoSearch = () => {\r\n    window.location.replace(\"/search\");\r\n    console.log(\"gotoSearch\");\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <header className={headerColorClasses}>\r\n        <h3>Movie App</h3>\r\n        <SearchButton onClick={gotoSearch} />\r\n      </header>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import \"./MovieDetail.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nconst MovieDetail = (props) => {\r\n  const { isLoading, error, sendRequest: sendfetch } = useHttp();\r\n  const [movieTrailer, setMovieTrailer] = useState([]);\r\n  console.log(props.id);\r\n  //Lấy data\r\n  useEffect(() => {\r\n    const receiveData = (data) => {\r\n      const loadedTrailer = data.results;\r\n      setMovieTrailer(loadedTrailer);\r\n    };\r\n    sendfetch(\r\n      {\r\n        url: `/movie/${props.id}/videos?api_key=8d889bf8e18531838dd6a6f6a0ba836c&language=en-US`,\r\n      },\r\n      receiveData\r\n    );\r\n  }, [sendfetch, props.id]);\r\n\r\n  // Khi không có dữ liệu video, sử dụng ảnh backdrop\r\n  let content = (\r\n    <img src={`http://image.tmdb.org/t/p/w500/${props.picture}`} alt=\"\" />\r\n  );\r\n\r\n  // Khi có dữ liệu video\r\n  if (movieTrailer.length !== 0) {\r\n    const opts = {\r\n      height: \"400\",\r\n      width: \"100%\",\r\n      playerVars: {\r\n        autoplay: 0,\r\n      },\r\n    };\r\n\r\n    // lọc trailer từ dữ liệu nhận được có site= Youtube, type= Teaser hoặc Trailer\r\n    const trailerFilter = movieTrailer.filter(\r\n      (movie) =>\r\n        movie.site === \"YouTube\" &&\r\n        (movie.type === \"Trailer\" || movie.type === \"Teaser\")\r\n    );\r\n\r\n    // Nếu có nhiều giá trị, lấy video đầu tiên, ưu tiên trailer\r\n    if (trailerFilter.length > 1) {\r\n      const trailer = trailerFilter.find((movie) => movie.type === \"Trailer\");\r\n\r\n      // Nếu có trailer\r\n      if (trailer.length !== 0) {\r\n        content = <YouTube videoId={trailer.key} opts={opts} />;\r\n      }\r\n\r\n      // Không có trailer\r\n      content = <YouTube videoId={trailerFilter[0].key} opts={opts} />;\r\n    } else {\r\n      // Nếu có 1 giá trị\r\n      content = <YouTube videoId={trailerFilter[0].key} opts={opts} />;\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>Something went wrong!</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading ...</p>;\r\n  }\r\n\r\n  return (\r\n    <div onClose={props.onClose} className=\"container\">\r\n      <div className=\"detail\">\r\n        <h1>{props.title}</h1>\r\n        <h3>Release Date: {props.releaseDate}</h3>\r\n        <h3>Vote: {props.vote}/10</h3>\r\n        <p>{props.overview}</p>\r\n      </div>\r\n      <div className=\"trailer\">{content}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieDetail;\r\n","import React, { useState } from \"react\";\nimport SearchButton from \"../SearchButton/SearchButton\";\nimport \"./SearchForm.css\";\nconst SearchForm = (props) => {\n  const [searchKey, setSearchKey] = useState(\"\");\n\n  // Bắt sự kiện của input\n  const inputChangeHandler = (e) => {\n    setSearchKey(e.target.value);\n  };\n\n  //Lấy search key người dùng nhập\n  const submitHandler = (e) => {\n    e.preventDefault();\n    props.onSearch(searchKey);\n  };\n\n  //Reset khung input\n  const resetInputHandler = () => {\n    setSearchKey(\"\");\n  };\n\n  return (\n    <section className=\"search-container\" onSubmit={submitHandler}>\n      <form className=\"search-form\">\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            id=\"search\"\n            placeholder=\"Search\"\n            onChange={inputChangeHandler}\n            value={searchKey}\n          />\n          <SearchButton className=\"search-icon\" />\n        </div>\n        <div className=\"search-button\">\n          <button onClick={resetInputHandler}>RESET</button>\n          <button className=\"active\">SEARCH</button>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default SearchForm;\n","import \"./ResultList.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\r\nconst ResultList = (props) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [movieDetailIsShown, setMovieDetailIsShown] = useState(false);\r\n  const [movieDetailId, setMovieDetailId] = useState(null);\r\n\r\n  //Shown detail của movie\r\n  const showMovieDetailHandler = (e) => {\r\n    setMovieDetailIsShown(true);\r\n    if (Number(e.target.id) === movieDetailId) {\r\n      setMovieDetailIsShown(!movieDetailIsShown);\r\n    }\r\n    setMovieDetailId(Number(e.target.id));\r\n  };\r\n\r\n  //Hide detail của movie\r\n  const hideMovieDetailHandler = () => {\r\n    setMovieDetailIsShown(false);\r\n  };\r\n\r\n  //Lấy dữ liệu của movie mở detail\r\n  const movieDeTail = movies.find((movie) => movie.id === movieDetailId);\r\n\r\n  // Lấy data Trending\r\n  const { isLoading, error, sendRequest: sendfetch } = useHttp();\r\n  useEffect(() => {\r\n    const receiveData = (data) => {\r\n      const loadedMovie = data.results;\r\n      setMovies(loadedMovie);\r\n    };\r\n    sendfetch(\r\n      {\r\n        url: `/search/movie?api_key=8d889bf8e18531838dd6a6f6a0ba836c&language=en-US&query=${props.query}&page=1`,\r\n      },\r\n      receiveData\r\n    );\r\n  }, [sendfetch, props.query]);\r\n\r\n  // Khi chưa nhập search key\r\n  let content = <p>Let's search!</p>;\r\n\r\n  // Khi nhập search key\r\n  if (props.query !== \"\") {\r\n    // Khi tìm có kết quả\r\n    if (movies) {\r\n      content = (\r\n        <div className=\"searchItem\">\r\n          {movies.map((movie) => (\r\n            <div>\r\n              <img\r\n                className=\"search-img\"\r\n                src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`}\r\n                id={movie.id}\r\n                onClick={showMovieDetailHandler}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      content = <p>Can't found any movies</p>;\r\n    }\r\n\r\n    //   Khi xảy ra lỗi\r\n    if (error) {\r\n      content = <p>Something went wrong!</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n      content = <p>Loading ...</p>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"search-result\">\r\n      <h3>Search Result</h3>\r\n      {movieDetailIsShown && (\r\n        <MovieDetail\r\n          onClose={hideMovieDetailHandler}\r\n          id={movieDeTail.id}\r\n          title={movieDeTail.name ? movieDeTail.name : movieDeTail.title}\r\n          releaseDate={movieDeTail.first_air_date}\r\n          vote={movieDeTail.vote_average}\r\n          overview={movieDeTail.overview}\r\n          picture={movieDeTail.backdrop_path}\r\n        />\r\n      )}\r\n      {content}\r\n    </section>\r\n  );\r\n};\r\nexport default ResultList;\r\n","import React, { useState } from \"react\";\nimport \"./Search.css\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport SearchForm from \"../../components/SearchForm/SearchForm\";\nimport ResultList from \"../../components/ResultList/ResultList\";\nconst Search = () => {\n  const [searchKey, setSearchKey] = useState(\"\");\n  // Dữ liệu tìm kiếm\n  const searchHandler = (key) => {\n    setSearchKey(key);\n  };\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <SearchForm onSearch={searchHandler} />\n      <ResultList query={searchKey} id=\"results\" />\n    </div>\n  );\n};\n\nexport default Search;\n"],"sourceRoot":""}